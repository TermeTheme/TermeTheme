<?php
/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/.
 */
function terme_get_meta($value)
{
    global $post;

    $field = get_post_meta($post->ID, $value, true);
    if (!empty($field)) {
        return is_array($field) ? stripslashes_deep($field) : stripslashes(wp_kses_decode_entities($field));
    } else {
        return false;
    }
}

function terme_add_meta_box()
{
    add_meta_box(
        'layout_option',
        __('Layout Option', 'terme'),
        'terme_html0',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'post_meta_option',
        __('Post Meta Option', 'terme'),
        'terme_html',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'related_post_option',
        __('Related Post Option', 'terme'),
        'terme_html1',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'comments_option',
        __('Comments Option', 'terme'),
        'terme_html2',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'author_option',
        __('Author Option', 'terme'),
        'terme_html3',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'share_option',
        __('Share Option', 'terme'),
        'terme_html4',
        'post',
        'normal',
        'default'
    );
    add_meta_box(
        'breadcrumb_option',
        __('Breadcrumb Option', 'terme'),
        'terme_html5',
        'post',
        'normal',
        'default'
    );
}
add_action('add_meta_boxes', 'terme_add_meta_box');

function terme_html($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>

	  <p>
		<input type="checkbox" name="terme_date_meta" id="terme_date_meta" value="date-meta" <?php echo (terme_get_meta('terme_date_meta') === 'date-meta') ? 'checked' : '';
    ?>>
		<label for="terme_date_meta"><?php _e('date_meta', 'terme');
    ?></label>
    </p>
    <p>
		<input type="checkbox" name="terme_category_meta" id="terme_category_meta" value="category-meta" <?php echo (terme_get_meta('terme_category_meta') === 'category-meta') ? 'checked' : '';
    ?>>
		<label for="terme_category_meta"><?php _e('category_meta', 'terme');
    ?></label>
    </p>
    <p>
		<input type="checkbox" name="terme_view_count_meta" id="terme_view_count_meta" value="view-count-meta" <?php echo (terme_get_meta('terme_view_count_meta') === 'view-count-meta') ? 'checked' : '';
    ?>>
		<label for="terme_view_count_meta"><?php _e('view_count_meta', 'terme');
    ?></label>
    </p>
    <p>
		<input type="checkbox" name="terme_comment_count_meta" id="terme_comment_count_meta" value="comment-count-meta" <?php echo (terme_get_meta('terme_comment_count_meta') === 'comment-count-meta') ? 'checked' : '';
    ?>>
		<label for="terme_comment_count_meta"><?php _e('comment_count_meta', 'terme');
    ?></label>
    </p>
    <p>
      <label for="terme_date_format"><?php _e('Date Format', 'terme');
    ?></label><br>
      <input type="text" name="terme_date_format" id="terme_date_format" value="<?php echo terme_get_meta('terme_date_format');
    ?>">
    </p>
    <?php
}
function terme_html1($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>
    <p>
  		<label for="terme_related_post_count"><?php _e('related_post_count', 'terme');
    ?></label><br>
  		<input type="text" name="terme_related_post_count" id="terme_related_post_count" value="<?php echo terme_get_meta('terme_related_post_count');
    ?>">
  	</p>
    <p>
  		<label for="terme_related_post_by"><?php _e('related_post_by', 'terme');
    ?></label><br>
  		<select name="terme_related_post_by" id="terme_related_post_by">
  			<option <?php echo (terme_get_meta('terme_related_post_by') === 'tag') ? 'selected' : '' ?>>tag</option>
  			<option <?php echo (terme_get_meta('terme_related_post_by') === 'category') ? 'selected' : '' ?>>category</option>
  		</select>
  	</p>
    <p>
  		<input type="checkbox" name="terme_related_post_display" id="terme_related_post_display" value="related-post-display" <?php echo (terme_get_meta('terme_related_post_display') === 'related-post-display') ? 'checked' : '';
    ?>>
  		<label for="terme_related_post_display"><?php _e('Show Related Post', 'terme');
    ?></label>
    </p>
    <?php
}
function terme_html2($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>
    <p>
  		<input type="checkbox" name="terme_comments_display" id="terme_comments_display" value="comments-display" <?php echo (terme_get_meta('terme_comments_display') === 'comments-display') ? 'checked' : '';
    ?>>
  		<label for="terme_comments_display"><?php _e('Show Comment Post', 'terme');
    ?></label>
    </p>
    <?php
}
function terme_html3($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>
    <p>
  		<input type="checkbox" name="terme_author_display" id="terme_author_display" value="author-display" <?php echo (terme_get_meta('terme_author_display') === 'author-display') ? 'checked' : '';
    ?>>
  		<label for="terme_author_display"><?php _e('Show Post Author', 'terme');
    ?></label>
    </p>
    <?php
}
function terme_html4($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>
    <p>
  		<input type="checkbox" name="terme_share_display" id="terme_share_display" value="share-display" <?php echo (terme_get_meta('terme_share_display') === 'share-display') ? 'checked' : '';
    ?>>
  		<label for="terme_share_display"><?php _e('Show Post Share', 'terme');
    ?></label>
    </p>
    <?php
}
function terme_html5($post)
{
    wp_nonce_field('_terme_nonce', 'terme_nonce');
    ?>
    <p>
  		<input type="checkbox" name="terme_breadcrumb_display" id="terme_breadcrumb_display" value="terme_breadcrumb" <?php echo (terme_get_meta('terme_breadcrumb_display') === 'terme_breadcrumb') ? 'checked' : '';
    ?>>
  		<label for="terme_breadcrumb_display"><?php _e('Show Breadcrumb', 'terme');
    ?></label>
    </p>
    <?php
}

function terme_save($post_id)
{
    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {
        return;
    }
    if (!isset($_POST['terme_nonce']) || !wp_verify_nonce($_POST['terme_nonce'], '_terme_nonce')) {
        return;
    }
    if (!current_user_can('edit_post', $post_id)) {
        return;
    }

    if (isset($_POST['terme_date_meta'])) {
        update_post_meta($post_id, 'terme_date_meta', esc_attr($_POST['terme_date_meta']));
    } else {
        update_post_meta($post_id, 'terme_date_meta', null);
    }
    if (isset($_POST['terme_category_meta'])) {
        update_post_meta($post_id, 'terme_category_meta', esc_attr($_POST['terme_category_meta']));
    } else {
        update_post_meta($post_id, 'terme_category_meta', null);
    }
    if (isset($_POST['terme_view_count_meta'])) {
        update_post_meta($post_id, 'terme_view_count_meta', esc_attr($_POST['terme_view_count_meta']));
    } else {
        update_post_meta($post_id, 'terme_view_count_meta', null);
    }
    if (isset($_POST['terme_comment_count_meta'])) {
        update_post_meta($post_id, 'terme_comment_count_meta', esc_attr($_POST['terme_comment_count_meta']));
    } else {
        update_post_meta($post_id, 'terme_comment_count_meta', null);
    }
    if (isset($_POST['terme_related_post_count'])) {
        update_post_meta($post_id, 'terme_related_post_count', esc_attr($_POST['terme_related_post_count']));
    }
    if (isset($_POST['terme_date_format'])) {
        update_post_meta($post_id, 'terme_date_format', esc_attr($_POST['terme_date_format']));
    }
    if (isset($_POST['terme_related_post_by'])) {
        update_post_meta($post_id, 'terme_related_post_by', esc_attr($_POST['terme_related_post_by']));
    }
    if (isset($_POST['terme_related_post_display'])) {
        update_post_meta($post_id, 'terme_related_post_display', esc_attr($_POST['terme_related_post_display']));
    } else {
        update_post_meta($post_id, 'terme_related_post_display', null);
    }
    if (isset($_POST['terme_comments_display'])) {
        update_post_meta($post_id, 'terme_comments_display', esc_attr($_POST['terme_comments_display']));
    } else {
        update_post_meta($post_id, 'terme_comments_display', null);
    }
    if (isset($_POST['terme_author_display'])) {
        update_post_meta($post_id, 'terme_author_display', esc_attr($_POST['terme_author_display']));
    } else {
        update_post_meta($post_id, 'terme_author_display', null);
    }
    if (isset($_POST['terme_share_display'])) {
        update_post_meta($post_id, 'terme_share_display', esc_attr($_POST['terme_share_display']));
    } else {
        update_post_meta($post_id, 'terme_share_display', null);
    }
    if (isset($_POST['terme_breadcrumb_display'])) {
        update_post_meta($post_id, 'terme_breadcrumb_display', esc_attr($_POST['terme_breadcrumb_display']));
    } else {
        update_post_meta($post_id, 'terme_breadcrumb_display', null);
    }
}
add_action('save_post', 'terme_save');

/*
    Usage: terme_get_meta( 'terme_date_meta' )
    Usage: terme_get_meta( 'terme_category_meta' )
    Usage: terme_get_meta( 'terme_view_count_meta' )
    Usage: terme_get_meta( 'terme_comment_count_meta' )
*/
